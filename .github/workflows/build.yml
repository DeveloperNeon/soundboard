name: Build
on:
  push:
    branches:
      - master
jobs:
  linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust: [stable, nightly]
    steps:
    - uses: hecrj/setup-rust-action@v1
      with:
        rust-version: ${{ matrix.rust }}
    - uses: actions/checkout@master
    - uses: actions/cache@v2
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
    - name: Enable Link Time Optimizations
      run: |
        echo "[profile.release]" >> Cargo.toml
        echo "lto = true" >> Cargo.toml
    - name: Install alsa
      run: sudo apt-get install alsa alsa-tools libasound2-dev
    - name: Build debug soundboard binary
      run: cargo build --verbose
    - name: Build soundboard binary
      run: cargo build --verbose --release
    - name: Archive soundboard binary
      uses: actions/upload-artifact@v2
      with:
        name: soundboard-x86_64-debian-linux-gnu
        path: target/release/soundboard
    - name: Archive soundboard sounds dir
      uses: actions/upload-artifact@v2
      with:
        name: soundboard-x86_64-debian-linux-gnu
        path: target/release/sounds/
    - name: Archive soundboard default config
      uses: actions/upload-artifact@v2
      with:
        name: soundboard-x86_64-debian-linux-gnu
        path: target/release/soundboard.toml

  windows:
    runs-on: windows-latest
    strategy:
      matrix:
        rust: [stable, nightly]
    steps:
    - uses: hecrj/setup-rust-action@v1
      with:
        rust-version: ${{ matrix.rust }}
    - uses: actions/checkout@master
    - uses: actions/cache@v2
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
    - name: Enable Link Time Optimizations
      run: |
        echo "[profile.release]" >> Cargo.toml
        echo "lto = true" >> Cargo.toml
    - name: Build debug soundboard binary
      run: cargo build --verbose
    - name: Build soundboard binary
      run: cargo build --verbose --release
    - name: Archive soundboard binary
      uses: actions/upload-artifact@v2
      with:
        name: soundboard-x86_64-pc-windows-msvc
        path: target/release/soundboard.exe
    - name: Archive soundboard sounds dir
      uses: actions/upload-artifact@v2
      with:
        name: soundboard-x86_64-pc-windows-msvc
        path: target/release/sounds/
    - name: Archive soundboard default config
      uses: actions/upload-artifact@v2
      with:
        name: soundboard-x86_64-pc-windows-msvc
        path: target/release/soundboard.toml

  macos:
    runs-on: macOS-latest
    strategy:
      matrix:
        rust: [stable, nightly]
    steps:
    - uses: hecrj/setup-rust-action@v1
      with:
        rust-version: ${{ matrix.rust }}
    - uses: actions/checkout@master
    - uses: actions/cache@v2
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
    - name: Enable Link Time Optimizations
      run: |
        echo "[profile.release]" >> Cargo.toml
        echo "lto = true" >> Cargo.toml
    - name: Build debug soundboard binary
      env:
        MACOSX_DEPLOYMENT_TARGET: 10.14
      run: cargo build --verbose
    - name: Build soundboard binary
      env:
        MACOSX_DEPLOYMENT_TARGET: 10.14
      run: cargo build --verbose --release
    - name: Archive soundboard binary
      uses: actions/upload-artifact@v2
      with:
        name: soundboard-x86_64-apple-darwin
        path: target/release/soundboard
    - name: Archive soundboard sounds dir
      uses: actions/upload-artifact@v2
      with:
        name: soundboard-x86_64-apple-darwin
        path: target/release/sounds/
    - name: Archive soundboard default config
      uses: actions/upload-artifact@v2
      with:
        name: soundboard-x86_64-apple-darwin
        path: target/release/soundboard.toml
